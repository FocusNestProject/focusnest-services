openapi: 3.1.0
info:
  title: FocusNest Focus Service
  version: 0.1.0
  description: Focus/Activity service for productivity tracking with Firestore backend
servers:
  - url: https://focus.focusnest.com
    description: Production
  - url: http://localhost:8080
    description: Local development
paths:
  /healthz:
    get:
      operationId: getHealth
      summary: Health check
      tags:
        - system
      responses:
        "200":
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
  /v1/focus/history-month:
    get:
      operationId: getHistoryMonth
      summary: Get running month view with day slots and status
      tags:
        - focus
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: month
          description: Month (1-12). Defaults to current month.
          schema:
            type: integer
            minimum: 1
            maximum: 12
        - in: query
          name: year
          description: Year (YYYY). Defaults to current year.
          schema:
            type: integer
            minimum: 2020
            maximum: 2030
      responses:
        "200":
          description: Month view with daily status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MonthHistoryResponse"
        "401":
          description: Missing or invalid authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /v1/focus/productivity:
    get:
      operationId: listProductivities
      summary: List productivity entries for the authenticated user (paginated)
      tags:
        - focus
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          description: 1-based page number. Defaults to 1.
          schema:
            type: integer
            minimum: 1
        - in: query
          name: pageSize
          description: Page size (max 100). Defaults to 20.
          schema:
            type: integer
            minimum: 1
            maximum: 100
      responses:
        "200":
          description: Paginated list of productivity entries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProductivitiesResponse"
        "401":
          description: Missing or invalid authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      operationId: createProductivity
      summary: Create/save productivity entry
      tags:
        - focus
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateProductivityRequest"
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProductivityRequest"
      responses:
        "201":
          description: Productivity entry created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Activity"
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Missing or invalid authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /v1/focus/productivity/{activity_id}:
    get:
      operationId: getProductivity
      summary: Retrieve a productivity entry by ID
      tags:
        - focus
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: activity_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Productivity entry
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Activity"
        "401":
          description: Missing or invalid authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Entry not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /v1/focus/image-overview:retry:
    post:
      operationId: retryImageOverview
      summary: Retry image overview generation
      tags:
        - focus
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RetryImageOverviewRequest"
      responses:
        "200":
          description: Image overview generation triggered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryImageOverviewResponse"
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Missing or invalid authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
        service:
          type: string
        version:
          type: string
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        requestId:
          type: string
      required:
        - code
        - message
    Activity:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        category:
          type: string
          enum: [Work, Study, Reading, Journaling, Cooking, Workout, Other]
        time_mode:
          type: string
          enum: [Pomodoro, QuickFocus, FreeTimer, CustomTimer]
        description:
          type: string
        mood:
          type: string
        cycles:
          type: integer
          minimum: 0
        elapsed_ms:
          type: integer
          minimum: 0
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        image:
          $ref: "#/components/schemas/ActivityImage"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - user_id
        - category
        - time_mode
        - cycles
        - elapsed_ms
        - start_at
        - end_at
        - created_at
        - updated_at
    ActivityImage:
      type: object
      properties:
        original_url:
          type: string
          format: uri
          description: Signed URL to the original image
        overview_url:
          type: string
          format: uri
          description: Signed URL to the overview image (may be empty until processed)
      required:
        - original_url
        - overview_url
    CreateProductivityRequest:
      type: object
      properties:
        category:
          type: string
          enum: [Work, Study, Reading, Journaling, Cooking, Workout, Other]
        time_mode:
          type: string
          enum: [Pomodoro, QuickFocus, FreeTimer, CustomTimer]
        description:
          type: string
        mood:
          type: string
        cycles:
          type: integer
          minimum: 0
        elapsed_ms:
          type: integer
          minimum: 0
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        image:
          type: string
          format: binary
      required:
        - category
        - time_mode
        - cycles
        - elapsed_ms
    MonthHistoryResponse:
      type: object
      properties:
        month:
          type: integer
          minimum: 1
          maximum: 12
        year:
          type: integer
        days:
          type: array
          items:
            $ref: "#/components/schemas/DayStatus"
    DayStatus:
      type: object
      properties:
        date:
          type: string
          format: date
        status:
          type: string
          enum: [active, inactive, partial]
        total_elapsed_ms:
          type: integer
        sessions:
          type: integer
    ListProductivitiesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Activity"
        pagination:
          type: object
          properties:
            page:
              type: integer
            pageSize:
              type: integer
            totalPages:
              type: integer
            totalItems:
              type: integer
            hasNext:
              type: boolean
          required:
            - page
            - pageSize
            - totalPages
            - totalItems
            - hasNext
      required:
        - data
        - pagination
    RetryImageOverviewRequest:
      type: object
      properties:
        activity_id:
          type: string
      required:
        - activity_id
    RetryImageOverviewResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
