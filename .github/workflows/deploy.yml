name: Deploy to Cloud Run

on:
  push:
    branches: [main]

env:
  PROJECT_ID: focusnest-470308
  REGION: asia-southeast2
  ARTIFACT_REGISTRY: asia-southeast2-docker.pkg.dev

jobs:
  deploy-focus-service:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker asia-southeast2-docker.pkg.dev

      - name: Build and push Focus Service
        run: |
          docker build -f focus-service/Dockerfile -t asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/focus-service:$GITHUB_SHA .
          docker push asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/focus-service:$GITHUB_SHA

      - name: Deploy Focus Service
        id: deploy
        run: |
          gcloud run deploy focus-service \
            --image asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/focus-service:$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --no-allow-unauthenticated \
            --ingress all \
            --set-env-vars="GCP_PROJECT_ID=$PROJECT_ID" \
            --set-env-vars="DATASTORE=firestore" \
            --set-env-vars="AUTH_MODE=noop"
          
          URL=$(gcloud run services describe focus-service --platform managed --region $REGION --format 'value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT

  deploy-chatbot-service:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker asia-southeast2-docker.pkg.dev

      - name: Build and push Chatbot Service
        run: |
          docker build -f chatbot-service/Dockerfile -t asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/chatbot-service:$GITHUB_SHA .
          docker push asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/chatbot-service:$GITHUB_SHA

      - name: Deploy Chatbot Service
        id: deploy
        run: |
          gcloud run deploy chatbot-service \
            --image asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/chatbot-service:$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --no-allow-unauthenticated \
            --ingress all \
            --set-env-vars="GCP_PROJECT_ID=$PROJECT_ID" \
            --set-env-vars="AUTH_MODE=noop"
          
          URL=$(gcloud run services describe chatbot-service --platform managed --region $REGION --format 'value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT

  deploy-progress-service:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker asia-southeast2-docker.pkg.dev

      - name: Build and push Progress Service
        run: |
          docker build -f progress-service/Dockerfile -t asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/progress-service:$GITHUB_SHA .
          docker push asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/progress-service:$GITHUB_SHA

      - name: Deploy Progress Service
        id: deploy
        run: |
          gcloud run deploy progress-service \
            --image asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/progress-service:$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --no-allow-unauthenticated \
            --ingress all \
            --set-env-vars="GCP_PROJECT_ID=$PROJECT_ID" \
            --set-env-vars="AUTH_MODE=noop"
          
          URL=$(gcloud run services describe progress-service --platform managed --region $REGION --format 'value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT

  deploy-user-service:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker asia-southeast2-docker.pkg.dev

      - name: Build and push User Service
        run: |
          docker build -f user-service/Dockerfile -t asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/user-service:$GITHUB_SHA .
          docker push asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/user-service:$GITHUB_SHA

      - name: Deploy User Service
        id: deploy
        run: |
          gcloud run deploy user-service \
            --image asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/user-service:$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --no-allow-unauthenticated \
            --ingress all \
            --set-env-vars="GCP_PROJECT_ID=$PROJECT_ID" \
            --set-env-vars="AUTH_MODE=noop"
          
          URL=$(gcloud run services describe user-service --platform managed --region $REGION --format 'value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT

  deploy-gateway:
    needs: [deploy-focus-service, deploy-chatbot-service, deploy-progress-service, deploy-user-service]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker asia-southeast2-docker.pkg.dev

      - name: Build and push Gateway API
        run: |
          docker build -f gateway-api/Dockerfile -t asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/gateway-api:$GITHUB_SHA .
          docker push asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/gateway-api:$GITHUB_SHA

      - name: Deploy Gateway API
        run: |
          gcloud run deploy gateway-api \
            --image asia-southeast2-docker.pkg.dev/$PROJECT_ID/docker-images/gateway-api:$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --ingress all \
            --set-env-vars="CLERK_JWKS_URL=${{ secrets.CLERK_JWKS_URL }}" \
            --set-env-vars="CLERK_ISSUER=${{ secrets.CLERK_ISSUER }}" \
            --set-env-vars="ACTIVITY_URL=${{ needs.deploy-focus-service.outputs.url }}" \
            --set-env-vars="USER_URL=${{ needs.deploy-user-service.outputs.url }}" \
            --set-env-vars="ANALYTICS_URL=${{ needs.deploy-progress-service.outputs.url }}" \
            --set-env-vars="CHATBOT_URL=${{ needs.deploy-chatbot-service.outputs.url }}"

      - name: Get Gateway URL
        id: gateway-url
        run: |
          URL=$(gcloud run services describe gateway-api --platform managed --region $REGION --format 'value(status.url)')
          echo "Gateway deployed to: $URL"
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Output Service URLs
        run: |
          echo "## ðŸš€ Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Gateway API:** ${{ steps.gateway-url.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Focus Service:** ${{ needs.deploy-focus-service.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Chatbot Service:** ${{ needs.deploy-chatbot-service.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Progress Service:** ${{ needs.deploy-progress-service.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "**User Service:** ${{ needs.deploy-user-service.outputs.url }}" >> $GITHUB_STEP_SUMMARY
