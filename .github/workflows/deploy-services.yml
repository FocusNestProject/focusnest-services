name: Deploy All Services

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'analytics-service/**'
      - 'media-service/**'
      - 'session-service/**'
      - 'user-service/**'
      - 'webhook-service/**'
      - 'shared-libs/**'
      - '.github/workflows/deploy-services.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        svc: [analytics-service, media-service, session-service, user-service, webhook-service]
    env:
      REGION: ${{ vars.GCP_REGION }}
      PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
      IMAGE: ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/focusnest/${{ matrix.svc }}:latest

    steps:
      - uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Artifact Registry Docker auth
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build image
        run: |
          docker build -t $IMAGE -f ${{ matrix.svc }}/Dockerfile .

      - name: Push image
        run: docker push $IMAGE

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ matrix.svc }} \
            --image $IMAGE \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --port 8080 \
            --set-env-vars "AUTH_MODE=clerk,DATASTORE=firestore,CLERK_JWKS_URL=${{ secrets.CLERK_JWKS_URL }},CLERK_AUDIENCE=${{ secrets.CLERK_AUDIENCE }},CLERK_ISSUER=${{ secrets.CLERK_ISSUER }},GCP_PROJECT_ID=${{ vars.GCP_PROJECT_ID }}"


