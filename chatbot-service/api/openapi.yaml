openapi: 3.1.0
info:
  title: FocusNest Chatbot Service
  version: 0.1.0
  description: Chatbot service with Gemini integration and chat persistence
servers:
  - url: https://gateway-api-855213286667.asia-southeast2.run.app
    description: Production
  - url: http://localhost:8080
    description: Local development
paths:
  /healthz:
    get:
      operationId: getHealth
      summary: Health check
      tags:
        - system
      responses:
        "200":
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
  /v1/chatbot/history:
    get:
      operationId: listChatbotHistory
      summary: List chatbot conversation sessions for the authenticated user
      tags:
        - chatbot
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          description: 1-based page number. Defaults to 1.
          schema:
            type: integer
            minimum: 1
        - in: query
          name: pageSize
          description: Page size (max 100). Defaults to 20.
          schema:
            type: integer
            minimum: 1
            maximum: 100
      responses:
        "200":
          description: Paginated list of chatbot sessions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListChatbotSessionsResponse"
        "401":
          description: Missing or invalid authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /v1/chatbot/ask:
    post:
      operationId: askChatbot
      summary: Ask the chatbot a question (creates session if none exists)
      tags:
        - chatbot
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AskChatbotRequest"
      responses:
        "200":
          description: Chatbot response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AskChatbotResponse"
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Missing or invalid authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /v1/chatbot/sessions/{session_id}:
    get:
      operationId: getChatbotSession
      summary: Retrieve a chatbot session by ID
      tags:
        - chatbot
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: session_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Chatbot session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatbotSession"
        "401":
          description: Missing or invalid authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Session not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      operationId: deleteChatbotSession
      summary: Delete a chatbot session by ID
      tags:
        - chatbot
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: session_id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Session deleted successfully
        "401":
          description: Missing or invalid authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Session not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
        service:
          type: string
        version:
          type: string
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        requestId:
          type: string
      required:
        - code
        - message
    ChatbotSession:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        title:
          type: string
        message_count:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - user_id
        - title
        - message_count
        - created_at
        - updated_at
    ChatMessage:
      type: object
      properties:
        id:
          type: string
        session_id:
          type: string
        user_id:
          type: string
        role:
          type: string
          enum: [user, assistant, system]
        content:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - session_id
        - user_id
        - role
        - content
        - created_at
    ListChatbotSessionsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/ChatbotSession"
        pagination:
          type: object
          properties:
            page:
              type: integer
            pageSize:
              type: integer
            totalPages:
              type: integer
            totalItems:
              type: integer
            hasNext:
              type: boolean
          required:
            - page
            - pageSize
            - totalPages
            - totalItems
            - hasNext
      required:
        - data
        - pagination
    AskChatbotRequest:
      type: object
      properties:
        message:
          type: string
        session_id:
          type: string
          description: Optional session ID to continue existing conversation
      required:
        - message
    AskChatbotResponse:
      type: object
      properties:
        message:
          type: string
        session_id:
          type: string
        message_id:
          type: string
      required:
        - message
        - session_id
        - message_id
